application.langs="en"

play.http.secret.key="U3spB5^7L;EK_:<=OKxwpOJGM:0JsAyTu2pWhKsqbiGMO@tT_8voDNs:x7q=x?e<"

play.assets {
  path = "/public"
  urlPrefix = "/assets"
}

play {
  modules {
    enabled += "be.objectify.deadbolt.scala.DeadboltModule"
    enabled += "modules.CustomDeadboltHook"
    enabled += "security.CustomDeadboltFilterHook"
    enabled += "com.builtamont.ApplicationModule"
  }
}

play.mailer {
  host = "smtp.gmail.com" // (mandatory)
  port = 587
  ssl = false
  tls = true
  tlsRequired = true
  user = "NoReply@timetoteach.zone"
  password = ${TIMETOTEACH_NO_REPLY_PASSWORD}
  debug = no
  timeout = null
  connectiontimeout = null
  mock = no
}


play.filters.headers {
  contentSecurityPolicy="default-src 'self' 'unsafe-inline' https://*.hotjar.com/ https://z-p3-graph.facebook.com/ https://*.facebook.com/   https://facebook.com/ https://z-m-graph.facebook.com/ https://graph.facebook.com/ https://weareoutman.github.io https://web.facebook.com/ https://syndication.twitter.com https://platform.twitter.com https://www.youtube.com/ https://staticxx.facebook.com/ https://www.facebook.com/ https://cdnjs.cloudflare.com https://code.jquery.com https://ajax.googleapis.com https://apis.google.com https://accounts.google.com/ https://maxcdn.bootstrapcdn.com; img-src 'self' data: * ; script-src 'self' 'unsafe-inline' https://*.hotjar.com/ https://z-m-graph.facebook.com/ https://apis.google.com https://platform.twitter.com http://connect.facebook.net https://graph.facebook.com https://connect.facebook.net https://weareoutman.github.io https://ajax.googleapis.com https://maxcdn.bootstrapcdn.com https://code.jquery.com https://cdnjs.cloudflare.com"
}

play.filters.enabled += play.filters.hosts.AllowedHostsFilter
play.filters.hosts {
  # Allow requests to example.com, its subdomains, and localhost:9000.
  allowed = ["localhost:9000", "127.0.0.1:9000", "localhost:9443", "127.0.0.1:9443"]
}

play.filters.csrf.header.bypassHeaders {
  X-Requested-With = "*"
  Csrf-Token = "nocheck"
}

login.details {
  facebook {
    timetoteach-facebook-id = ${TIMETOTEACH_FACEBOOK_ID}
    timetoteach-facebook-secret = ${TIMETOTEACH_FACEBOOK_SECRET}
  }
}

feature.toggles {
  front-page-feature-sections = "false"
  front-page-feature-sections = ${?SHOW_FRONT_PAGE_FEATURES}

  general-development-toggle = "false"
  general-development-toggle = ${?GENERAL_DEVELOPMENT_TOGGLE}
}

services {
  user-service-host = ${USER_READER_SERVICE_HOST}
  user-service-port = ${USER_READER_SERVICE_PORT}

  user-writer-host = ${USER_WRITER_SERVICE_HOST}
  user-writer-port = ${USER_WRITER_SERVICE_PORT}

  school-reader-service-host = ${SCHOOL_READER_SERVICE_HOST}
  school-reader-service-port = ${SCHOOL_READER_SERVICE_PORT}

  classtimetable-writer-host = ${CLASSTIMETABLE_WRITER_SERVICE_HOST}
  classtimetable-writer-port = ${CLASSTIMETABLE_WRITER_SERVICE_PORT}

  classtimetable-reader-host = ${CLASSTIMETABLE_READER_SERVICE_HOST}
  classtimetable-reader-port = ${CLASSTIMETABLE_READER_SERVICE_PORT}

  es-and-os-reader-host = ${ES_AND_OS_READER_SERVICE_HOST}
  es-and-os-reader-port = ${ES_AND_OS_READER_SERVICE_PORT}
}

mongodb {
  connection_uri = "mongodb://localhost:27017"
  connection_uri = ${?MONGODB_CONNECTION_URI}

  localmongodb = "true"
  localmongodb = ${?LOCAL_MONGO_DB}

  planning-database-name = "planning"
  termly-plans-collection-name = "termly.plans"
  termly-curriculum-selection-collection-name = "termly.curriculum.selection"
}

//play.server.https.keyStore.path="/etc/tls/server.keystore"
//play.server.https.keyStore.password="the8balL"
//
//play.ws.ssl.loose.acceptAnyCertificate=true

logger.play.api.libs.ws.ssl=DEBUG

ssl-config {
  trustManager = {
    stores = [
      { type = "PEM", path = "/etc/tls/ca.crt" }
      { type = "PEM", path = "/etc/tls/server.crt" }
      { path: ${java.home}/lib/security/cacerts }
    ]
  }
}

ssl-config.loose.acceptAnyCertificate=true
ssl-config.loose.allowWeakCiphers=true
ssl-config.loose.disableHostnameVerification=true
ssl-config.loose.allowWeakProtocols=true

//ssl-config.debug = {
//  # Turn on all debugging
//  all = true
//  # Turn on ssl debugging
//  ssl = true
//  # Turn certpath debugging on
//  certpath = true
//  # Turn ocsp debugging on
//  ocsp = true
//  # Enable per-record tracing
//  record = true
//  # hex dump of record plaintext, requires record to be true
//  plaintext = true
//  # print raw SSL/TLS packets, requires record to be true
//  packet = true
//  # Print each handshake message
//  handshake = true
//  # Print hex dump of each handshake message, requires handshake to be true
//  data = true
//  # Enable verbose handshake message printing, requires handshake to be true
//  verbose = true
//  # Print key generation data
//  keygen = true
//  # Print session activity
//  session = true
//  # Print default SSL initialization
//  defaultctx = true
//  # Print SSLContext tracing
//  sslctx = true
//  # Print session cache tracing
//  sessioncache = true
//  # Print key manager tracing
//  keymanager = true
//  # Print trust manager tracing
//  trustmanager = true
//  # Turn pluggability debugging on
//  pluggability = true
//}
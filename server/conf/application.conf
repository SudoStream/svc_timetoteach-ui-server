application.langs="en"

play.http.secret.key="U3spB5^7L;EK_:<=OKxwpOJGM:0JsAyTu2pWhKsqbiGMO@tT_8voDNs:x7q=x?e<"

play {
  modules {
    enabled += "be.objectify.deadbolt.scala.DeadboltModule"
    enabled += "modules.CustomDeadboltHook"
    enabled += "security.CustomDeadboltFilterHook"
  }
}

play.filters.headers {
  contentSecurityPolicy="default-src 'self' 'unsafe-inline' https://weareoutman.github.io https://www.youtube.com/ https://cdnjs.cloudflare.com https://code.jquery.com https://ajax.googleapis.com https://apis.google.com https://accounts.google.com/ https://maxcdn.bootstrapcdn.com; img-src 'self' data: * ; script-src 'self' 'unsafe-inline' https://apis.google.com https://weareoutman.github.io https://ajax.googleapis.com https://maxcdn.bootstrapcdn.com https://code.jquery.com https://cdnjs.cloudflare.com"
}

play.filters.enabled += play.filters.hosts.AllowedHostsFilter
play.filters.hosts {
  # Allow requests to example.com, its subdomains, and localhost:9000.
  allowed = ["localhost:9000", "127.0.0.1:9000", "localhost:9443", "127.0.0.1:9443"]
}

play.filters.csrf.header.bypassHeaders {
  X-Requested-With = "*"
  Csrf-Token = "nocheck"
}

services {
  user-service-host = ${USER_READER_SERVICE_HOST}
  user-service-port = ${USER_READER_SERVICE_PORT}

  user-writer-host = ${USER_WRITER_SERVICE_HOST}
  user-writer-port = ${USER_WRITER_SERVICE_PORT}

  school-reader-service-host = ${SCHOOL_READER_SERVICE_HOST}
  school-reader-service-port = ${SCHOOL_READER_SERVICE_PORT}

}

//play.server.https.keyStore.path="/etc/tls/server.keystore"
//play.server.https.keyStore.password="the8balL"
//
//play.ws.ssl.loose.acceptAnyCertificate=true

logger.play.api.libs.ws.ssl=DEBUG

ssl-config.loose.acceptAnyCertificate=true
ssl-config.loose.allowWeakCiphers=true
ssl-config.loose.disableHostnameVerification=true
ssl-config.loose.allowWeakProtocols=true

ssl-config.debug = {
  # Turn on all debugging
  all = true
  # Turn on ssl debugging
  ssl = true
  # Turn certpath debugging on
  certpath = true
  # Turn ocsp debugging on
  ocsp = true
  # Enable per-record tracing
  record = true
  # hex dump of record plaintext, requires record to be true
  plaintext = true
  # print raw SSL/TLS packets, requires record to be true
  packet = true
  # Print each handshake message
  handshake = true
  # Print hex dump of each handshake message, requires handshake to be true
  data = true
  # Enable verbose handshake message printing, requires handshake to be true
  verbose = true
  # Print key generation data
  keygen = true
  # Print session activity
  session = true
  # Print default SSL initialization
  defaultctx = true
  # Print SSLContext tracing
  sslctx = true
  # Print session cache tracing
  sessioncache = true
  # Print key manager tracing
  keymanager = true
  # Print trust manager tracing
  trustmanager = true
  # Turn pluggability debugging on
  pluggability = true
}
# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET           /                                                                                 controllers.Application.index
GET           /health                                                                           controllers.Application.health
GET           /privacy                                                                          controllers.Application.privacy
# Map static resources from the /public folder to the /assets URL path
GET           /assets/*file                                                                     controllers.Assets.versioned(path="/public", file: Asset)

GET           /login                                                                            controllers.Application.login
GET           /loggedout                                                                        controllers.Application.loggedOutSuccessfully
GET           /signup                                                                           controllers.UserSignupController.signupStep1
GET           /creatingnewuser                                                                  controllers.UserSignupController.creatingNewUser
GET           /signupsteptwo                                                                    controllers.UserSignupController.signupStep2
POST          /usercreated                                                                      controllers.UserSignupController.userCreated
GET           /profile                                                                          controllers.Application.profile
POST          /tokensignin                                                                      controllers.SecurityController.tokensignin
POST          /facebooktokensignin                                                              controllers.SecurityController.facebookTokenSignIn
POST          /signout                                                                          controllers.SecurityController.signout
GET           /signedupcongrats                                                                 controllers.UserSignupController.signedUpCongrats

GET           /app                                                                              controllers.Application.timeToTeachApp
GET           /initialUserPreferences                                                           controllers.Application.askInitialPreferences
POST          /initialPreferencesCreated                                                        controllers.Application.initialPreferencesCreated
GET           /weeklyplanning                                                                   controllers.Application.weeklyPlanning

GET           /termlyplanning                                                                   controllers.planning.termly.TermlyPlansController.termlyPlans
GET           /termlyplanningselectcurriculumareas/:classId                                     controllers.planning.termly.TermlyPlansController.termlyPlansSelectOverallCurriculumAreasForTheTerm(classId)
POST          /curriulumAreasSelected                                                           controllers.planning.termly.TermlyPlansController.curriulumAreasSelected
GET           /termlyplanningforclass/:classId                                                  controllers.planning.termly.TermlyPlansController.termlyPlansForClass(classId)
GET           /termlyplanningforclassatgrouplevel/:classId/:curriculumArea/:groupId             controllers.planning.termly.TermlyPlansController.termlyPlansGroupLevel_SelectEsOsBenchmarksForCurriculumArea(classId, curriculumArea, groupId)
GET           /termlyplanningforclassatclasslevel/:classId/:curriculumArea                      controllers.planning.termly.TermlyPlansController.termlyPlansClassLevel_SelectEsOsBenchmarksForCurriculumArea(classId, curriculumArea)
POST          /termlysaveplanningforsubjectandgroup/:classId/:curriculumArea/:groupId           controllers.planning.termly.TermlyPlansController.savePlansForGroup(classId, curriculumArea, groupId)
POST          /termlysaveplanningforcurriculumareaandclass/:classId/:curriculumArea             controllers.planning.termly.TermlyPlansController.savePlansForClass(classId, curriculumArea)
GET           /termlyoverviewforcurriculumareaandgroup/:classId/:curriculumArea/:groupId        controllers.planning.termly.TermlyPlansController.termlyOverviewForCurriculumAreaAtGroupLevel(classId, curriculumArea, groupId)
GET           /termlyoverviewforcurriculumareaatclasslevel/:classId/:curriculumArea             controllers.planning.termly.TermlyPlansController.termlyOverviewForCurriculumAreaAtClassLevel(classId,curriculumArea)
#GET           /pdf                                                                              controllers.planning.termly.TermlyPlansController.pdfTest

GET           /classes                                                                          controllers.planning.classtimetable.ClassTimetableController.classesHome
GET           /addnewclass                                                                      controllers.planning.classtimetable.ClassTimetableController.addNewClass
GET           /manageclass/:classId                                                             controllers.planning.classtimetable.ClassTimetableController.manageClass(classId)
GET           /classtimetable/:classId                                                          controllers.planning.classtimetable.ClassTimetableController.classTimetable(classId)
POST          /savenewclass                                                                     controllers.planning.classtimetable.ClassTimetableController.saveNewClass
POST          /editclass                                                                        controllers.planning.classtimetable.ClassTimetableController.editClass
DELETE        /deleteclass/:tttUserId/:classId                                                  controllers.planning.classtimetable.ClassTimetableController.deleteClass(tttUserId, classId)

POST          /classtimetablesave                                                               controllers.planning.classtimetable.ClassTimetableController.classTimetableSave
#########################
GET           /twitter/auth                                                                     controllers.Twitter.authenticate()
#GET     /view/:foo/:bar             controllers.Application.view(foo: String, bar: String)